generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id             String    @id @default(uuid())
  username       String    @unique
  email          String    @unique
  password       String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  rol            String
  name           String
  veterinariaId  Int?
  veterinaria    Veterinaria? @relation(fields: [veterinariaId], references: [id])
  sessions       Session[]
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Veterinaria {
  id           Int       @id @default(autoincrement())
  nombre       String    @unique
  direccion    String    @unique
  telefono     String    @unique
  proprietario String
  proprietario2 String?
  logoImage    String?    @unique
  users        User[]
  mascotas     Mascota[]
  clientes     Cliente[]
}

model Mascota { 
  id               Int        @id @default(autoincrement())
  nombre           String
  especie          String
  peso             Int?
  fecha_nacimiento DateTime
  fotoMascota      String?
  clienteId        Int
  veterinariaId    Int
  veterinaria      Veterinaria @relation(fields: [veterinariaId], references: [id])
  cliente          Cliente     @relation(fields: [clienteId], references: [id])
}

model Cliente {
  id             Int        @id @default(autoincrement())
  nombre         String
  apellido       String
  email          String
  dni            String
  password       String
  telefono       String
  telefono2      String?
  observaciones  String?
  veterinariaId  Int
  veterinaria    Veterinaria @relation(fields: [veterinariaId], references: [id])
  mascotas       Mascota[]
}